// Copyright 2021 Evgeny Safonov
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2021-03-03 16:38:34.874292 +0000 UTC

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

// GraphCompartmentUse is documented here http://hl7.org/fhir/ValueSet/graph-compartment-use
type GraphCompartmentUse int

const (
	GraphCompartmentUseCondition GraphCompartmentUse = iota
	GraphCompartmentUseRequirement
)

func (code GraphCompartmentUse) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *GraphCompartmentUse) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "condition":
		*code = GraphCompartmentUseCondition
	case "requirement":
		*code = GraphCompartmentUseRequirement
	default:
		return fmt.Errorf("unknown GraphCompartmentUse code `%s`", s)
	}
	return nil
}
func (code GraphCompartmentUse) String() string {
	return code.Code()
}
func (code GraphCompartmentUse) Code() string {
	switch code {
	case GraphCompartmentUseCondition:
		return "condition"
	case GraphCompartmentUseRequirement:
		return "requirement"
	}
	return "<unknown>"
}
func (code GraphCompartmentUse) Display() string {
	switch code {
	case GraphCompartmentUseCondition:
		return "Condition"
	case GraphCompartmentUseRequirement:
		return "Requirement"
	}
	return "<unknown>"
}
func (code GraphCompartmentUse) Definition() string {
	switch code {
	case GraphCompartmentUseCondition:
		return "This compartment rule is a condition for whether the rule applies."
	case GraphCompartmentUseRequirement:
		return "This compartment rule is enforced on any relationships that meet the conditions."
	}
	return "<unknown>"
}
