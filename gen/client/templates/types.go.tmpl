package fhir

import (
	"reflect"

	"github.com/gotidy/fhir-client/models"
)

const (
{{- range $entity := .Entities}}
	{{$entity}}Resource ResourceType = "{{$entity}}"
{{- end}}
)

var resources = map[ResourceType]struct {
	new func() interface{}
	typ reflect.Type
} {
{{- range $entity := .Entities}}
	{{$entity}}Resource: {new: func() interface{} {return &models.{{$entity}}{}}, typ: reflect.TypeOf(models.{{$entity}}{})},
{{- end}}
}

// NewResource creates the new resource.
func NewResource(resource ResourceType) interface{} {
	return resources[resource].new()
}

// TypeOf returns the type of resource.
func TypeOf(resource ResourceType) reflect.Type {
	return resources[resource].typ
}